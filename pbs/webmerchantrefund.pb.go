// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: pbs/webmerchantrefund.proto

package pbs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestRefund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantCode     string  `protobuf:"bytes,1,opt,name=merchant_code,json=merchantCode,proto3" json:"merchant_code,omitempty"`
	TrxDate          string  `protobuf:"bytes,2,opt,name=trx_date,json=trxDate,proto3" json:"trx_date,omitempty"`
	TrxNo            string  `protobuf:"bytes,3,opt,name=trx_no,json=trxNo,proto3" json:"trx_no,omitempty"`
	TrxRefNo         string  `protobuf:"bytes,4,opt,name=trx_ref_no,json=trxRefNo,proto3" json:"trx_ref_no,omitempty"`
	CustomerName     string  `protobuf:"bytes,5,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	Amount           float64 `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`
	PaymentMethod    int32   `protobuf:"varint,7,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	SettlementStatus int32   `protobuf:"varint,8,opt,name=settlement_status,json=settlementStatus,proto3" json:"settlement_status,omitempty"`
	WithdrawalStatus int32   `protobuf:"varint,9,opt,name=withdrawal_status,json=withdrawalStatus,proto3" json:"withdrawal_status,omitempty"`
	TrxId            int32   `protobuf:"varint,10,opt,name=trx_id,json=trxId,proto3" json:"trx_id,omitempty"`
	MerchantId       int32   `protobuf:"varint,11,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	TrxAmount        float64 `protobuf:"fixed64,12,opt,name=trx_amount,json=trxAmount,proto3" json:"trx_amount,omitempty"`
}

func (x *RequestRefund) Reset() {
	*x = RequestRefund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_webmerchantrefund_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestRefund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRefund) ProtoMessage() {}

func (x *RequestRefund) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_webmerchantrefund_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRefund.ProtoReflect.Descriptor instead.
func (*RequestRefund) Descriptor() ([]byte, []int) {
	return file_pbs_webmerchantrefund_proto_rawDescGZIP(), []int{0}
}

func (x *RequestRefund) GetMerchantCode() string {
	if x != nil {
		return x.MerchantCode
	}
	return ""
}

func (x *RequestRefund) GetTrxDate() string {
	if x != nil {
		return x.TrxDate
	}
	return ""
}

func (x *RequestRefund) GetTrxNo() string {
	if x != nil {
		return x.TrxNo
	}
	return ""
}

func (x *RequestRefund) GetTrxRefNo() string {
	if x != nil {
		return x.TrxRefNo
	}
	return ""
}

func (x *RequestRefund) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *RequestRefund) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RequestRefund) GetPaymentMethod() int32 {
	if x != nil {
		return x.PaymentMethod
	}
	return 0
}

func (x *RequestRefund) GetSettlementStatus() int32 {
	if x != nil {
		return x.SettlementStatus
	}
	return 0
}

func (x *RequestRefund) GetWithdrawalStatus() int32 {
	if x != nil {
		return x.WithdrawalStatus
	}
	return 0
}

func (x *RequestRefund) GetTrxId() int32 {
	if x != nil {
		return x.TrxId
	}
	return 0
}

func (x *RequestRefund) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *RequestRefund) GetTrxAmount() float64 {
	if x != nil {
		return x.TrxAmount
	}
	return 0
}

type GetRequestRefundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SettlementId int32 `protobuf:"varint,1,opt,name=settlement_id,json=settlementId,proto3" json:"settlement_id,omitempty"`
}

func (x *GetRequestRefundRequest) Reset() {
	*x = GetRequestRefundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_webmerchantrefund_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestRefundRequest) ProtoMessage() {}

func (x *GetRequestRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_webmerchantrefund_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestRefundRequest.ProtoReflect.Descriptor instead.
func (*GetRequestRefundRequest) Descriptor() ([]byte, []int) {
	return file_pbs_webmerchantrefund_proto_rawDescGZIP(), []int{1}
}

func (x *GetRequestRefundRequest) GetSettlementId() int32 {
	if x != nil {
		return x.SettlementId
	}
	return 0
}

type GetRequestRefundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestRefund *RequestRefund `protobuf:"bytes,1,opt,name=request_refund,json=requestRefund,proto3" json:"request_refund,omitempty"`
}

func (x *GetRequestRefundResponse) Reset() {
	*x = GetRequestRefundResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_webmerchantrefund_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestRefundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestRefundResponse) ProtoMessage() {}

func (x *GetRequestRefundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_webmerchantrefund_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestRefundResponse.ProtoReflect.Descriptor instead.
func (*GetRequestRefundResponse) Descriptor() ([]byte, []int) {
	return file_pbs_webmerchantrefund_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequestRefundResponse) GetRequestRefund() *RequestRefund {
	if x != nil {
		return x.RequestRefund
	}
	return nil
}

type PostRequestRefundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxId        int32   `protobuf:"varint,1,opt,name=trx_id,json=trxId,proto3" json:"trx_id,omitempty"`
	Amount       float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	AdminFee     float64 `protobuf:"fixed64,3,opt,name=admin_fee,json=adminFee,proto3" json:"admin_fee,omitempty"`
	MerchantId   int32   `protobuf:"varint,4,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	SettlementId int32   `protobuf:"varint,5,opt,name=settlement_id,json=settlementId,proto3" json:"settlement_id,omitempty"`
}

func (x *PostRequestRefundRequest) Reset() {
	*x = PostRequestRefundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_webmerchantrefund_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRequestRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRequestRefundRequest) ProtoMessage() {}

func (x *PostRequestRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_webmerchantrefund_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRequestRefundRequest.ProtoReflect.Descriptor instead.
func (*PostRequestRefundRequest) Descriptor() ([]byte, []int) {
	return file_pbs_webmerchantrefund_proto_rawDescGZIP(), []int{3}
}

func (x *PostRequestRefundRequest) GetTrxId() int32 {
	if x != nil {
		return x.TrxId
	}
	return 0
}

func (x *PostRequestRefundRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PostRequestRefundRequest) GetAdminFee() float64 {
	if x != nil {
		return x.AdminFee
	}
	return 0
}

func (x *PostRequestRefundRequest) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *PostRequestRefundRequest) GetSettlementId() int32 {
	if x != nil {
		return x.SettlementId
	}
	return 0
}

type PostRequestRefundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostRequestRefundResponse) Reset() {
	*x = PostRequestRefundResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_webmerchantrefund_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRequestRefundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRequestRefundResponse) ProtoMessage() {}

func (x *PostRequestRefundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_webmerchantrefund_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRequestRefundResponse.ProtoReflect.Descriptor instead.
func (*PostRequestRefundResponse) Descriptor() ([]byte, []int) {
	return file_pbs_webmerchantrefund_proto_rawDescGZIP(), []int{4}
}

type Refund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RequestDate    string  `protobuf:"bytes,2,opt,name=request_date,json=requestDate,proto3" json:"request_date,omitempty"`
	TrxNumber      string  `protobuf:"bytes,3,opt,name=trx_number,json=trxNumber,proto3" json:"trx_number,omitempty"`
	TrxDate        string  `protobuf:"bytes,4,opt,name=trx_date,json=trxDate,proto3" json:"trx_date,omitempty"`
	PaymentChannel string  `protobuf:"bytes,5,opt,name=payment_channel,json=paymentChannel,proto3" json:"payment_channel,omitempty"`
	TrxAmount      float64 `protobuf:"fixed64,6,opt,name=trx_amount,json=trxAmount,proto3" json:"trx_amount,omitempty"`
	RefundAmount   float64 `protobuf:"fixed64,7,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"`
	Status         string  `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	TrxRefNo       string  `protobuf:"bytes,9,opt,name=trx_ref_no,json=trxRefNo,proto3" json:"trx_ref_no,omitempty"`
	CustomerName   string  `protobuf:"bytes,10,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerPhone  string  `protobuf:"bytes,11,opt,name=customer_phone,json=customerPhone,proto3" json:"customer_phone,omitempty"`
	CustomerEmail  string  `protobuf:"bytes,12,opt,name=customer_email,json=customerEmail,proto3" json:"customer_email,omitempty"`
	MerchantCode   string  `protobuf:"bytes,13,opt,name=merchant_code,json=merchantCode,proto3" json:"merchant_code,omitempty"`
	UpdateDate     string  `protobuf:"bytes,14,opt,name=update_date,json=updateDate,proto3" json:"update_date,omitempty"`
	Remark         string  `protobuf:"bytes,15,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *Refund) Reset() {
	*x = Refund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_webmerchantrefund_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Refund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refund) ProtoMessage() {}

func (x *Refund) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_webmerchantrefund_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refund.ProtoReflect.Descriptor instead.
func (*Refund) Descriptor() ([]byte, []int) {
	return file_pbs_webmerchantrefund_proto_rawDescGZIP(), []int{5}
}

func (x *Refund) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Refund) GetRequestDate() string {
	if x != nil {
		return x.RequestDate
	}
	return ""
}

func (x *Refund) GetTrxNumber() string {
	if x != nil {
		return x.TrxNumber
	}
	return ""
}

func (x *Refund) GetTrxDate() string {
	if x != nil {
		return x.TrxDate
	}
	return ""
}

func (x *Refund) GetPaymentChannel() string {
	if x != nil {
		return x.PaymentChannel
	}
	return ""
}

func (x *Refund) GetTrxAmount() float64 {
	if x != nil {
		return x.TrxAmount
	}
	return 0
}

func (x *Refund) GetRefundAmount() float64 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *Refund) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Refund) GetTrxRefNo() string {
	if x != nil {
		return x.TrxRefNo
	}
	return ""
}

func (x *Refund) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *Refund) GetCustomerPhone() string {
	if x != nil {
		return x.CustomerPhone
	}
	return ""
}

func (x *Refund) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *Refund) GetMerchantCode() string {
	if x != nil {
		return x.MerchantCode
	}
	return ""
}

func (x *Refund) GetUpdateDate() string {
	if x != nil {
		return x.UpdateDate
	}
	return ""
}

func (x *Refund) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type GetRefundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantCode    string `protobuf:"bytes,1,opt,name=merchant_code,json=merchantCode,proto3" json:"merchant_code,omitempty"`
	PageSize        string `protobuf:"bytes,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Page            string `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
	OrderBy         string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	RequestDateFrom string `protobuf:"bytes,5,opt,name=request_date_from,json=requestDateFrom,proto3" json:"request_date_from,omitempty"`
	RequestDateTo   string `protobuf:"bytes,6,opt,name=request_date_to,json=requestDateTo,proto3" json:"request_date_to,omitempty"`
	TrxNumber       string `protobuf:"bytes,7,opt,name=trx_number,json=trxNumber,proto3" json:"trx_number,omitempty"`
	TrxDateFrom     string `protobuf:"bytes,8,opt,name=trx_date_from,json=trxDateFrom,proto3" json:"trx_date_from,omitempty"`
	TrxDateTo       string `protobuf:"bytes,9,opt,name=trx_date_to,json=trxDateTo,proto3" json:"trx_date_to,omitempty"`
	PaymentChannel  string `protobuf:"bytes,10,opt,name=payment_channel,json=paymentChannel,proto3" json:"payment_channel,omitempty"`
	Status          string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetRefundsRequest) Reset() {
	*x = GetRefundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_webmerchantrefund_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRefundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRefundsRequest) ProtoMessage() {}

func (x *GetRefundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_webmerchantrefund_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRefundsRequest.ProtoReflect.Descriptor instead.
func (*GetRefundsRequest) Descriptor() ([]byte, []int) {
	return file_pbs_webmerchantrefund_proto_rawDescGZIP(), []int{6}
}

func (x *GetRefundsRequest) GetMerchantCode() string {
	if x != nil {
		return x.MerchantCode
	}
	return ""
}

func (x *GetRefundsRequest) GetPageSize() string {
	if x != nil {
		return x.PageSize
	}
	return ""
}

func (x *GetRefundsRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *GetRefundsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetRefundsRequest) GetRequestDateFrom() string {
	if x != nil {
		return x.RequestDateFrom
	}
	return ""
}

func (x *GetRefundsRequest) GetRequestDateTo() string {
	if x != nil {
		return x.RequestDateTo
	}
	return ""
}

func (x *GetRefundsRequest) GetTrxNumber() string {
	if x != nil {
		return x.TrxNumber
	}
	return ""
}

func (x *GetRefundsRequest) GetTrxDateFrom() string {
	if x != nil {
		return x.TrxDateFrom
	}
	return ""
}

func (x *GetRefundsRequest) GetTrxDateTo() string {
	if x != nil {
		return x.TrxDateTo
	}
	return ""
}

func (x *GetRefundsRequest) GetPaymentChannel() string {
	if x != nil {
		return x.PaymentChannel
	}
	return ""
}

func (x *GetRefundsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetRefundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Refund *Refund `protobuf:"bytes,1,opt,name=refund,proto3" json:"refund,omitempty"`
}

func (x *GetRefundsResponse) Reset() {
	*x = GetRefundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_webmerchantrefund_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRefundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRefundsResponse) ProtoMessage() {}

func (x *GetRefundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_webmerchantrefund_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRefundsResponse.ProtoReflect.Descriptor instead.
func (*GetRefundsResponse) Descriptor() ([]byte, []int) {
	return file_pbs_webmerchantrefund_proto_rawDescGZIP(), []int{7}
}

func (x *GetRefundsResponse) GetRefund() *Refund {
	if x != nil {
		return x.Refund
	}
	return nil
}

type ReadRefundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadRefundRequest) Reset() {
	*x = ReadRefundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_webmerchantrefund_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRefundRequest) ProtoMessage() {}

func (x *ReadRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_webmerchantrefund_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRefundRequest.ProtoReflect.Descriptor instead.
func (*ReadRefundRequest) Descriptor() ([]byte, []int) {
	return file_pbs_webmerchantrefund_proto_rawDescGZIP(), []int{8}
}

func (x *ReadRefundRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadRefundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Refund *Refund `protobuf:"bytes,1,opt,name=refund,proto3" json:"refund,omitempty"`
}

func (x *ReadRefundResponse) Reset() {
	*x = ReadRefundResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbs_webmerchantrefund_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRefundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRefundResponse) ProtoMessage() {}

func (x *ReadRefundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pbs_webmerchantrefund_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRefundResponse.ProtoReflect.Descriptor instead.
func (*ReadRefundResponse) Descriptor() ([]byte, []int) {
	return file_pbs_webmerchantrefund_proto_rawDescGZIP(), []int{9}
}

func (x *ReadRefundResponse) GetRefund() *Refund {
	if x != nil {
		return x.Refund
	}
	return nil
}

var File_pbs_webmerchantrefund_proto protoreflect.FileDescriptor

var file_pbs_webmerchantrefund_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x62, 0x73, 0x2f, 0x77, 0x65, 0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x77,
	0x65, 0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x22, 0x99, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x78, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x72, 0x78, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x78, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x72, 0x78,
	0x5f, 0x72, 0x65, 0x66, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x72, 0x78, 0x52, 0x65, 0x66, 0x4e, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x72, 0x78, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x72, 0x78, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x72, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x74, 0x72, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x77, 0x65, 0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x22, 0xac, 0x01, 0x0a, 0x18, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x74, 0x72, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x72, 0x78, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x1b, 0x0a, 0x19, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe9, 0x03,
	0x0a, 0x06, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x72, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x72, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x78, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x78, 0x44, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x72, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x74, 0x72, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x72,
	0x78, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x72, 0x78, 0x52, 0x65, 0x66, 0x4e, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xfc, 0x02, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x26, 0x0a, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x78, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x72, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x78, 0x44,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x72, 0x78, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72,
	0x78, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x77, 0x65, 0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x22, 0x23, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77,
	0x65, 0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x32,
	0xb7, 0x03, 0x0a, 0x18, 0x57, 0x65, 0x62, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x12, 0x2a, 0x2e, 0x77, 0x65, 0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77,
	0x65, 0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x11, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x12, 0x2b, 0x2e, 0x77, 0x65, 0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x77, 0x65, 0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x24, 0x2e, 0x77, 0x65,
	0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x77, 0x65, 0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5b, 0x0a, 0x0a,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x24, 0x2e, 0x77, 0x65, 0x62,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x77, 0x65, 0x62, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x70,
	0x62, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pbs_webmerchantrefund_proto_rawDescOnce sync.Once
	file_pbs_webmerchantrefund_proto_rawDescData = file_pbs_webmerchantrefund_proto_rawDesc
)

func file_pbs_webmerchantrefund_proto_rawDescGZIP() []byte {
	file_pbs_webmerchantrefund_proto_rawDescOnce.Do(func() {
		file_pbs_webmerchantrefund_proto_rawDescData = protoimpl.X.CompressGZIP(file_pbs_webmerchantrefund_proto_rawDescData)
	})
	return file_pbs_webmerchantrefund_proto_rawDescData
}

var file_pbs_webmerchantrefund_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pbs_webmerchantrefund_proto_goTypes = []interface{}{
	(*RequestRefund)(nil),             // 0: webmerchantrefund.RequestRefund
	(*GetRequestRefundRequest)(nil),   // 1: webmerchantrefund.GetRequestRefundRequest
	(*GetRequestRefundResponse)(nil),  // 2: webmerchantrefund.GetRequestRefundResponse
	(*PostRequestRefundRequest)(nil),  // 3: webmerchantrefund.PostRequestRefundRequest
	(*PostRequestRefundResponse)(nil), // 4: webmerchantrefund.PostRequestRefundResponse
	(*Refund)(nil),                    // 5: webmerchantrefund.Refund
	(*GetRefundsRequest)(nil),         // 6: webmerchantrefund.GetRefundsRequest
	(*GetRefundsResponse)(nil),        // 7: webmerchantrefund.GetRefundsResponse
	(*ReadRefundRequest)(nil),         // 8: webmerchantrefund.ReadRefundRequest
	(*ReadRefundResponse)(nil),        // 9: webmerchantrefund.ReadRefundResponse
}
var file_pbs_webmerchantrefund_proto_depIdxs = []int32{
	0, // 0: webmerchantrefund.GetRequestRefundResponse.request_refund:type_name -> webmerchantrefund.RequestRefund
	5, // 1: webmerchantrefund.GetRefundsResponse.refund:type_name -> webmerchantrefund.Refund
	5, // 2: webmerchantrefund.ReadRefundResponse.refund:type_name -> webmerchantrefund.Refund
	1, // 3: webmerchantrefund.WebMerchantRefundService.GetRequestRefund:input_type -> webmerchantrefund.GetRequestRefundRequest
	3, // 4: webmerchantrefund.WebMerchantRefundService.PostRequestRefund:input_type -> webmerchantrefund.PostRequestRefundRequest
	6, // 5: webmerchantrefund.WebMerchantRefundService.GetRefunds:input_type -> webmerchantrefund.GetRefundsRequest
	8, // 6: webmerchantrefund.WebMerchantRefundService.ReadRefund:input_type -> webmerchantrefund.ReadRefundRequest
	2, // 7: webmerchantrefund.WebMerchantRefundService.GetRequestRefund:output_type -> webmerchantrefund.GetRequestRefundResponse
	4, // 8: webmerchantrefund.WebMerchantRefundService.PostRequestRefund:output_type -> webmerchantrefund.PostRequestRefundResponse
	7, // 9: webmerchantrefund.WebMerchantRefundService.GetRefunds:output_type -> webmerchantrefund.GetRefundsResponse
	9, // 10: webmerchantrefund.WebMerchantRefundService.ReadRefund:output_type -> webmerchantrefund.ReadRefundResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pbs_webmerchantrefund_proto_init() }
func file_pbs_webmerchantrefund_proto_init() {
	if File_pbs_webmerchantrefund_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pbs_webmerchantrefund_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestRefund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_webmerchantrefund_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestRefundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_webmerchantrefund_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestRefundResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_webmerchantrefund_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRequestRefundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_webmerchantrefund_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRequestRefundResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_webmerchantrefund_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Refund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_webmerchantrefund_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRefundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_webmerchantrefund_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRefundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_webmerchantrefund_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRefundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pbs_webmerchantrefund_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRefundResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pbs_webmerchantrefund_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pbs_webmerchantrefund_proto_goTypes,
		DependencyIndexes: file_pbs_webmerchantrefund_proto_depIdxs,
		MessageInfos:      file_pbs_webmerchantrefund_proto_msgTypes,
	}.Build()
	File_pbs_webmerchantrefund_proto = out.File
	file_pbs_webmerchantrefund_proto_rawDesc = nil
	file_pbs_webmerchantrefund_proto_goTypes = nil
	file_pbs_webmerchantrefund_proto_depIdxs = nil
}
